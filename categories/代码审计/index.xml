<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>代码审计 on F0rmat&#39;s Blog</title>
    <link>localhost/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</link>
    <description>Recent content in 代码审计 on F0rmat&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; Copyright F0rmat</copyright>
    <lastBuildDate>Sun, 22 Dec 2019 11:17:18 +0000</lastBuildDate><atom:link href="localhost/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maccms8最新命令执行漏洞</title>
      <link>localhost/posts/maccms8-latest-command-execution-vulnerability/</link>
      <pubDate>Sun, 22 Dec 2019 11:17:18 +0000</pubDate>
      
      <guid>localhost/posts/maccms8-latest-command-execution-vulnerability/</guid>
      <description>0x01 前言 太久太久没写文章。。。最近还发布了一些法律，许多网站都关了，我还在考虑是否去开这个博客，因为分享技术还得承担法律责任，不过不会再公布具有攻击性的工具或者exp。</description>
    </item>
    
    <item>
      <title>Seacms9.92从变量覆盖到getshell</title>
      <link>localhost/posts/seacms9.92-from-variable-override-to-getshell/</link>
      <pubDate>Tue, 22 Oct 2019 11:17:18 +0000</pubDate>
      
      <guid>localhost/posts/seacms9.92-from-variable-override-to-getshell/</guid>
      <description>文章的markdown的版本弄丢了，之前在知乎写的还在</description>
    </item>
    
    <item>
      <title>Seacms&lt;=9.92前台Getshell</title>
      <link>localhost/posts/seacms-front-desk-getshell/</link>
      <pubDate>Fri, 27 Sep 2019 01:01:30 +0000</pubDate>
      
      <guid>localhost/posts/seacms-front-desk-getshell/</guid>
      <description>0x01 前言 好久没发代码审计的文章了，最近挺多事情的，无意中看到90Sec上面有一篇seacms前台的getshell，突然就很感兴趣，之前审计这套程序的时候也审计了一下，后面太多事情就搁置了。</description>
    </item>
    
    <item>
      <title>某云分发APP上传漏洞</title>
      <link>localhost/posts/an-app-distribution-system-upload-vulnerability/</link>
      <pubDate>Fri, 06 Sep 2019 10:47:03 +0000</pubDate>
      
      <guid>localhost/posts/an-app-distribution-system-upload-vulnerability/</guid>
      <description>0x01 前言 大概有几个月没写文章了，最近都在忙(咸鱼),在某此渗透行动中发现的一个洞，感觉是开发留的一个后门。</description>
    </item>
    
    <item>
      <title>浅析PHP反序列化漏洞</title>
      <link>localhost/posts/analysis-of-php-deserialization-vulnerabilities/</link>
      <pubDate>Wed, 05 Jun 2019 17:00:57 +0000</pubDate>
      
      <guid>localhost/posts/analysis-of-php-deserialization-vulnerabilities/</guid>
      <description>0x01 前言 很久没有些文章了，今天复习了反序列化漏洞的知识，顺便写了一篇文章。</description>
    </item>
    
    <item>
      <title>zzzphp1.61 代码审计-从SQL注入到Getshell</title>
      <link>localhost/posts/zzzphp1.61-code-auditing-from-injecting-to-taking-a-shell/</link>
      <pubDate>Sun, 10 Mar 2019 17:56:36 +0000</pubDate>
      
      <guid>localhost/posts/zzzphp1.61-code-auditing-from-injecting-to-taking-a-shell/</guid>
      <description>0x01 前言 前天看到zzzphp这一个cms，看着有点像zzzcms，去看了也是zzzcms开发的一套程序，于是就去审计一下，这zzzcms我之前也有审计过 https://bbs.</description>
    </item>
    
    <item>
      <title>Seacms 8.7版本SQL注入分析</title>
      <link>localhost/posts/seacms8.7-sql-injection-analysis/</link>
      <pubDate>Mon, 04 Mar 2019 15:49:11 +0000</pubDate>
      
      <guid>localhost/posts/seacms8.7-sql-injection-analysis/</guid>
      <description>0x01 前言 好像没发文章了，在t00ls看到一篇seacms8.</description>
    </item>
    
    <item>
      <title>ThinkPHP5 远程代码执行漏洞动态分析</title>
      <link>localhost/posts/thinkphp5-remote-code-execution-vulnerability-dynamic-analysis/</link>
      <pubDate>Sat, 22 Dec 2018 11:17:18 +0000</pubDate>
      
      <guid>localhost/posts/thinkphp5-remote-code-execution-vulnerability-dynamic-analysis/</guid>
      <description>0x01 前言 这个漏洞已经过去了十多天了，最近比较忙，一直没有写分析的文章。今天抽点时间出来写一篇动态分析的文章，远程执行漏洞用动态分析比较方便也看出整个执行的过程和一些变量参数。</description>
    </item>
    
    <item>
      <title>upload-labs 通关笔记</title>
      <link>localhost/posts/upload-labs/</link>
      <pubDate>Sat, 24 Nov 2018 15:41:37 +0000</pubDate>
      
      <guid>localhost/posts/upload-labs/</guid>
      <description>upload-labs 通关笔记 前言 把上传的所有类型的漏洞都过一遍，然后做一个笔记，方便以后查看，在此也很感谢c0ny1大佬的平台。</description>
    </item>
    
    <item>
      <title>Finecms 5.0.10 Multiple vulnerability analysis</title>
      <link>localhost/posts/finecms-5.0.10-multiple-vulnerabilities/</link>
      <pubDate>Wed, 07 Nov 2018 14:30:25 +0000</pubDate>
      
      <guid>localhost/posts/finecms-5.0.10-multiple-vulnerabilities/</guid>
      <description>0x01 前言 已经一个月没有写文章了，最近发生了很多事情，之前的每日一洞、每周一洞，到现在的每月一洞了。感觉去审计多了就好比如去刷题，但是我觉得应该做一个系统化的学习.</description>
    </item>
    
    <item>
      <title>yxcms 1.4.7 最新版漏洞分析</title>
      <link>localhost/posts/yxcms-1.4.7-latest-version-of-vulnerability-analysis/</link>
      <pubDate>Mon, 17 Sep 2018 13:16:06 +0000</pubDate>
      
      <guid>localhost/posts/yxcms-1.4.7-latest-version-of-vulnerability-analysis/</guid>
      <description>0x01前言 在先知看到的，大部分都是后台漏洞，部分厂商对于后台的漏洞都不认可，因为厂商觉得能进入后台这些漏洞都不是漏洞。最恐怖的是厂商否认了漏洞存在，然后偷偷的去修复。</description>
    </item>
    
    <item>
      <title>动态调试|Maccms SQL 注入分析(附注入盲注脚本)</title>
      <link>localhost/posts/maccms-sql-injection-analysis/</link>
      <pubDate>Sun, 26 Aug 2018 15:49:02 +0000</pubDate>
      
      <guid>localhost/posts/maccms-sql-injection-analysis/</guid>
      <description>0x01 前言 已经有一周没发表文章了，一个朋友叫我研究maccms的代码审计，碰到这个注入的漏洞挺有趣的，就在此写一篇分析文。</description>
    </item>
    
    <item>
      <title>禅知Pro 1.6 前台任意文件读取分析</title>
      <link>localhost/posts/zen-knowledge-pro-1.6-front-end-arbitrary-file-reading-analysis/</link>
      <pubDate>Sun, 19 Aug 2018 10:00:02 +0000</pubDate>
      
      <guid>localhost/posts/zen-knowledge-pro-1.6-front-end-arbitrary-file-reading-analysis/</guid>
      <description>0x01 前言 这两天看到禅知这个CMS有一个前台的任意文件读取漏洞，就在此写一片分析文章。</description>
    </item>
    
    <item>
      <title>CVE-2018-1000094-CMSMS 2.2.5代码执行漏洞(每周一洞)</title>
      <link>localhost/posts/cve-2018-1000094-cmsms-2.2.5-code-execution-vulnerability/</link>
      <pubDate>Sat, 11 Aug 2018 09:31:30 +0000</pubDate>
      
      <guid>localhost/posts/cve-2018-1000094-cmsms-2.2.5-code-execution-vulnerability/</guid>
      <description>0x01 前言 CMS Made Simple是一个简单易于使用的内容管理系统。它使用PHP，MySQL和Smarty模板引擎开发。</description>
    </item>
    
    <item>
      <title>phpok4.9后台getshell(每周一洞)</title>
      <link>localhost/posts/phpok4.9-background-getshell/</link>
      <pubDate>Mon, 06 Aug 2018 08:19:40 +0000</pubDate>
      
      <guid>localhost/posts/phpok4.9-background-getshell/</guid>
      <description>0x01 前言 昨天看到phpok可以申请cve就去审计了一下，存在漏洞的地方还是挺多的，时间不多找了个简单的任意文件上传漏洞。</description>
    </item>
    
    <item>
      <title>phpok 4.9代码审计(每周一洞)</title>
      <link>localhost/posts/phpok-4.9-code-audit/</link>
      <pubDate>Sun, 05 Aug 2018 14:54:07 +0000</pubDate>
      
      <guid>localhost/posts/phpok-4.9-code-audit/</guid>
      <description>0x01 前言 一放暑假就特别多事情，很多事情都耽误了，看吐司文章看到一篇不错的审计文章，就学习下。</description>
    </item>
    
    <item>
      <title>DedeCMS V5.7后台过滤不当导致Getshell(每周一洞)</title>
      <link>localhost/posts/dedecms-v5.7-background-filtering-improperly-leads-to-getshell/</link>
      <pubDate>Fri, 27 Jul 2018 14:14:56 +0000</pubDate>
      
      <guid>localhost/posts/dedecms-v5.7-background-filtering-improperly-leads-to-getshell/</guid>
      <description>0x01 前言 前两天看到七月火表哥再先知发的一篇审计文章，感觉不错，是dedecms的getshell。就分析了一下，顺便写一篇文章学习。</description>
    </item>
    
    <item>
      <title>HDWiki v6.0最新版referer注入漏洞(每周一洞)</title>
      <link>localhost/posts/hdwiki-v6.0_latest_version_of_referer_injection_vulnerability/</link>
      <pubDate>Sun, 22 Jul 2018 17:13:30 +0000</pubDate>
      
      <guid>localhost/posts/hdwiki-v6.0_latest_version_of_referer_injection_vulnerability/</guid>
      <description>0x01 前言 经拖稿一个月了，差了四篇文章没补回来， 现在都补上，虽然说这样没有坚持的按时写下去，但是只要记得要做这个事情就行了，不能中途而废。这个漏洞比较鸡肋，搁现在估计都没戏了，但是这个漏洞的思路可以学习下，积累经验。</description>
    </item>
    
    <item>
      <title>Wordpress 4.9.6 Arbitrary File-Removal Vulnerability</title>
      <link>localhost/posts/wordpress-4.9.6-arbitrary-file-removal-vulnerability/</link>
      <pubDate>Sun, 01 Jul 2018 10:07:19 +0000</pubDate>
      
      <guid>localhost/posts/wordpress-4.9.6-arbitrary-file-removal-vulnerability/</guid>
      <description>0x01 前言 和预期超了几天，毕业了挺多聚会的，在学校的日子总是过得那么快，一转眼就毕业了。好些东西都没去好好珍惜，大学也不要求有多大的成就，就希望每天都能开开心心就最好的。 今天这篇文章的分析早就有人发过了，不过我觉得我还是得写一下，毕竟我要有我自己的风格。还是老样子，先测试漏洞怎么触发，然后再去做分析。</description>
    </item>
    
    <item>
      <title>WordPress 4.6 Command Execution Vulnerability(CVE-2016-10033) Analysis</title>
      <link>localhost/posts/analysis-of-wordpress4.6-command-execution-vulnerability/</link>
      <pubDate>Mon, 18 Jun 2018 12:47:35 +0000</pubDate>
      
      <guid>localhost/posts/analysis-of-wordpress4.6-command-execution-vulnerability/</guid>
      <description>0x01 前言 因为去参加比赛，已经有一个月没有写文章了，中间玩了段时间，现在把心收回来了，坚持每周一洞的习惯。废话不多说，下面是复现PHPMailer的详细过程，一步一步来理解这个漏洞的原理。</description>
    </item>
    
    <item>
      <title>Thinkphp框架 3.2.x sql注入漏洞分析(每周一洞)</title>
      <link>localhost/posts/thinkphp-framework-3.2.x-sql-injection-vulnerability-analysis/</link>
      <pubDate>Wed, 18 Apr 2018 15:20:50 +0000</pubDate>
      
      <guid>localhost/posts/thinkphp-framework-3.2.x-sql-injection-vulnerability-analysis/</guid>
      <description>0x01 前言 Thinkphp 3.</description>
    </item>
    
    <item>
      <title>Thinkphp框架 &lt; 5.0.16 sql注入漏洞分析(每日一洞)</title>
      <link>localhost/posts/thinkphp-framework-_-5.0.16-sql-injection-vulnerability-analysis/</link>
      <pubDate>Wed, 11 Apr 2018 09:34:29 +0000</pubDate>
      
      <guid>localhost/posts/thinkphp-framework-_-5.0.16-sql-injection-vulnerability-analysis/</guid>
      <description>0x01 前言 前天在公众号看到石大神发的一篇审计thinkphp的文章,就想写一个分析流程，delay到了今天。昨天在先知也看到了chybeta发的一篇分析文章感觉也不错。分析过程，我也会做thinkphp部分功能的解析。 废话不多说，开始吧！</description>
    </item>
    
    <item>
      <title>osCommerce 2.3.4.1 - 远程代码执行漏洞（每日一洞）</title>
      <link>localhost/posts/oscommerce-2.3.4.1-remote-code-execution-vulnerability/</link>
      <pubDate>Mon, 02 Apr 2018 11:18:58 +0000</pubDate>
      
      <guid>localhost/posts/oscommerce-2.3.4.1-remote-code-execution-vulnerability/</guid>
      <description>0x01 前言 好几天没有写了，前两天又去Boom了，差点没缓过来。今天在exploit-db逛看到一个洞，也是install的地方，想去利用上次那个远程数据库技巧来尝试下，发现这个洞根本用不到，不过新手可以学习下哈，也可以收藏下，因为有时候在ctf线下赛的时候官方会拿一些国外的程序给你玩，最近也在写python的漏洞利用工具，欢迎关注我的github。</description>
    </item>
    
    <item>
      <title>MIPCMS V3.1.0 远程写入配置文件Getshell(每日一洞)</title>
      <link>localhost/posts/mipcms-v3.1.0-remotely-writing-the-configuration-file-getshell/</link>
      <pubDate>Mon, 26 Mar 2018 01:09:26 +0000</pubDate>
      
      <guid>localhost/posts/mipcms-v3.1.0-remotely-writing-the-configuration-file-getshell/</guid>
      <description>0x01 前言 今天翻了下CNVD，看到了一个MIPCMS的远程代码执行漏洞，然后就去官网下载了这个版本的源码研究了下。 看下整体的结构，用的是thinkPHP的架构，看到了install这个文件没有可以绕过install.</description>
    </item>
    
    <item>
      <title>Wordpress Plugin Site Editor 1.1.1 - 本地文件包含漏洞分析(每日一洞)</title>
      <link>localhost/posts/wordpress-plugin-site-editor-1.1.1-local-file-inclusion-analysis/</link>
      <pubDate>Sun, 25 Mar 2018 13:45:14 +0000</pubDate>
      
      <guid>localhost/posts/wordpress-plugin-site-editor-1.1.1-local-file-inclusion-analysis/</guid>
      <description>0x01 前言 大概有一周没有写文章了，比赛完嗨皮了两天，喝酒喝到半夜回来继续看文章，看到了exploit的关于wordpress一个漏洞信息CVE-2018-7422 ，下面就来分析一下这个本地文件包含的漏洞代码，如果权限够的话是可以读取系统的一些敏感的文件例如:/etc/passwd、/etc/shadow等。</description>
    </item>
    
    <item>
      <title>DedeCMS V5.7 SP2后台Getshell 代码执行漏洞(每日一洞)</title>
      <link>localhost/posts/dedecms-v5.7-sp2-background-getshell-code-execution-vulnerability/</link>
      <pubDate>Sat, 10 Mar 2018 00:11:57 +0000</pubDate>
      
      <guid>localhost/posts/dedecms-v5.7-sp2-background-getshell-code-execution-vulnerability/</guid>
      <description>前言 这两天费劲脑力去撩小姐姐，感觉好难啊，还不如审计代码。  环境 Web： phpstudy System： Windows 10 X64 Browser： Firefox Quantum Python version ： 2.</description>
    </item>
    
    <item>
      <title>MetInfo5.3.19安装过程过滤不严导致Getshell(每日一洞)</title>
      <link>localhost/posts/metinfo5.3.19-installation-process-is-not-strict-lead-to-getshell/</link>
      <pubDate>Tue, 06 Mar 2018 22:41:35 +0000</pubDate>
      
      <guid>localhost/posts/metinfo5.3.19-installation-process-is-not-strict-lead-to-getshell/</guid>
      <description>前言 前几天在先知看到的漏洞，就很想写个分析过程了的，因为比赛培训和在审计一个CMS拖到了今天。</description>
    </item>
    
    <item>
      <title>ZZCMS8.2任意文件删除至getshell(每日一洞)</title>
      <link>localhost/posts/zzcms8.2-any-file-deleted-to-getshell/</link>
      <pubDate>Tue, 06 Mar 2018 22:41:35 +0000</pubDate>
      
      <guid>localhost/posts/zzcms8.2-any-file-deleted-to-getshell/</guid>
      <description>前言 今天就审计一个洞，时间不够用了。明天或者周末看看有空有拿一些难的漏洞来审计复现一下。</description>
    </item>
    
    <item>
      <title>ZZCMS8.2任意用户密码修改漏洞代码分析(每日一洞)</title>
      <link>localhost/posts/zzcms-any-user-password-changes-loopholes-code-points/</link>
      <pubDate>Tue, 06 Mar 2018 00:03:07 +0000</pubDate>
      
      <guid>localhost/posts/zzcms-any-user-password-changes-loopholes-code-points/</guid>
      <description>前言 这几天感冒很难受，再加上比赛的培训，估计后面会两天一篇。 这个小型CMS前段时间我也挖到了很多洞，这次就找seebug发的一篇来做审计。</description>
    </item>
    
    <item>
      <title>SeaCMS v6.54和v6.55前台Getshell 代码执行漏洞(每日一洞)</title>
      <link>localhost/posts/seacms-v6.54-and-v6.55-front-desk-getshell-code-execution-vulnerability-one-hole-a-day/</link>
      <pubDate>Sat, 03 Mar 2018 23:32:41 +0000</pubDate>
      
      <guid>localhost/posts/seacms-v6.54-and-v6.55-front-desk-getshell-code-execution-vulnerability-one-hole-a-day/</guid>
      <description>前言 这两个版本修复上次的v6.</description>
    </item>
    
    <item>
      <title>SeaCMS v6.45前台Getshell 代码执行漏洞(每日一洞)</title>
      <link>localhost/posts/seacms-v6.45-front-desk-getshell-code-execution-vulnerability-one-hole-a-day/</link>
      <pubDate>Fri, 02 Mar 2018 19:28:36 +0000</pubDate>
      
      <guid>localhost/posts/seacms-v6.45-front-desk-getshell-code-execution-vulnerability-one-hole-a-day/</guid>
      <description>前言 昨晚审计到了三点，今天还要整理宿舍就没有写文章。这个CMS没有用框架，漏洞的执行过程我看了很久才看完，下面就写漏洞执行过程和POC构造还有用Python编写批量Getshell脚本。</description>
    </item>
    
    <item>
      <title>FineCMS最新版5.0.8两处getshell(每天一洞)</title>
      <link>localhost/posts/the-latest-version-of-finecms-5.0.8-getshell-daily-two-holes/</link>
      <pubDate>Tue, 30 Jan 2018 00:06:41 +0000</pubDate>
      
      <guid>localhost/posts/the-latest-version-of-finecms-5.0.8-getshell-daily-two-holes/</guid>
      <description>前言 要专心学习代码审计了，看看能不能坚持每天去分析一个漏洞，我会去按照大神们分析的代码去读懂代码逻辑然后再写上自己的理解放在我的博客上面。在文章的末尾我会贴上文章的链接，尊重原作者的版权！</description>
    </item>
    
  </channel>
</rss>
